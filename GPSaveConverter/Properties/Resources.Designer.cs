//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPSaveConverter.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GPSaveConverter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Credits {
            get {
                object obj = ResourceManager.GetObject("Credits", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  {
        ///    &quot;PackageName&quot;: &quot;7904SEGAEuropeLtd.TwoPointHospital-GamePass_zs7esxpzd8d5c&quot;,
        ///    &quot;BaseNonXboxSaveLocation&quot;: &quot;%HOMEDRIVE%%HOMEPATH%\\AppData\\LocalLow\\Two Point Studios\\Two Point Hospital\\Cloud\\&lt;user-id&gt;\\&quot;,
        ///    &quot;FileTranslations&quot;: [
        ///      {
        ///        &quot;ContainerName1&quot;: &quot;TPHCONTAINER&quot;,
        ///        &quot;ContainerName2&quot;: &quot;TPHCONTAINER&quot;,
        ///        &quot;NamedRegexGroups&quot;: [ &quot;(?&lt;FileName&gt;[\\w\\-. \\\\]+)&quot; ],
        ///        &quot;NonXboxFilename&quot;: &quot;${FileName}&quot;,
        ///        &quot;XboxFileID&quot;: &quot;${FileName}&quot;
        ///      }
        ///    ]
        ///  },        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GameLibrary {
            get {
                return ResourceManager.GetString("GameLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;#	
        ///	.NOTES
        ///	===========================================================================
        ///	 Created on:    December 20, 2020
        ///	 Created by:   	Brian Lima, Joseph Tignor
        ///	 Filename:     	GetAUMIDScript.ps1
        ///	===========================================================================
        ///	.DESCRIPTION
        ///		Load package name, family name, and logo for all installed UWP packages.
        ///#&gt;
        ///$installedapps = get-AppxPackage
        ///$invalidNames = &apos;*ms-resource*&apos;, &apos;*DisplayName*&apos;
        ///$aumidList = @()
        ///
        ///foreach ($app in $installe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAUMIDScript {
            get {
                return ResourceManager.GetString("GetAUMIDScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon Icon {
            get {
                object obj = ResourceManager.GetObject("Icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;
        ///	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
        ///
        ///	&lt;targets&gt;
        ///		&lt;target name=&quot;toolstrip&quot; xsi:type=&quot;ToolStripItem&quot; toolStripName=&quot;statusStrip1&quot; itemName =&quot;infoStatusLabel&quot; formName=&quot;SaveFileConverterForm&quot; layout=&quot;${message}&quot;/&gt;
        ///		&lt;target name=&quot;file&quot; xsi:type=&quot;File&quot; fileName=&quot;${processname}.log&quot; /&gt;
        ///	&lt;/targets&gt;
        ///
        ///	&lt;rules&gt;
        ///		&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;toolstrip&quot; /&gt;
        ///		&lt;logger name=&quot;*&quot; m [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string nlog_config {
            get {
                return ResourceManager.GetString("nlog_config", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up the Steam API Key.
        /// </summary>
        internal static string SteamAPIKey {
            get {
                return ResourceManager.GetString("SteamAPIKey", resourceCulture);
            }
        }
    }
}
